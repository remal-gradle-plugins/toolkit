allprojects {
    configurations.create('projectDependencyConstraints') { Configuration conf ->
        conf.dependencies.whenObjectAdded { Dependency dep ->
            conf.dependencies.removeIf { Dependency otherDep ->
                if (otherDep === dep) return false
                return "${otherDep.group}:${otherDep.name}" == "${dep.group}:${dep.name}"
            }
        }

        conf.dependencyConstraints.whenObjectAdded { DependencyConstraint constraint ->
            conf.dependencyConstraints.removeIf { DependencyConstraint otherConstraint ->
                if (otherConstraint === constraint) return false
                return "${otherConstraint.group}:${otherConstraint.name}" == "${constraint.group}:${constraint.name}"
            }
        }

        String jacocoVersion = '0.8.8'

        conf.dependencies.addAll(
            [
                'org.immutables:bom:2.9.2',
                'org.ow2.asm:asm-bom:9.4',
                'org.junit:junit-bom:5.9.1',
                'org.mockito:mockito-bom:4.9.0',
            ].collect { project.dependencies.platform(it) }
        )

        conf.dependencyConstraints.addAll(
            [
                // Static analysis
                'com.google.code.findbugs:jsr305:3.0.2',
                'org.jetbrains:annotations:23.0.0',
                'com.google.errorprone:error_prone_annotations:2.16',
                'com.google.errorprone:error_prone_core:2.16',
                'com.github.spotbugs:spotbugs-annotations:4.7.3',

                // Annotation processing
                'com.google.auto.service:auto-service:1.0.1',
                'com.google.auto.service:auto-service-annotations:1.0.1',

                // Compile-only
                'name.remal:gradle-plugins-api:1.7.2',
                'org.apache.commons:commons-lang3:3.12.0',
                'org.apache.commons:commons-text:1.10.0',
                'com.google.guava:guava:31.1-jre',
                'org.jdom:jdom:2.0.2',

                // Compile
                "name.remal.gradle-api:local-groovy:${property('gradle-api.version')}",
                "name.remal.gradle-api:gradle-api:${property('gradle-api.version')}",

                // Test
                "name.remal.gradle-api:gradle-test-kit:${property('gradle-api.version')}",
                'org.assertj:assertj-core:3.23.1',
                "org.jacoco:org.jacoco.agent:$jacocoVersion",
                "org.jacoco:org.jacoco.ant:$jacocoVersion",
                "org.jacoco:org.jacoco.core:$jacocoVersion",
            ].collect {
                project.dependencies.constraints.create(it) { DependencyConstraint constraint ->
                    constraint.version { it.strictly(constraint.version) }
                }
            }
        )

        conf.visible = false
        conf.canBeConsumed = false
        conf.canBeResolved = false
        conf.description('Dependency constraints')

        configurations
            .matching { it !== conf }
            .configureEach { extendsFrom(conf) }
    }

    configurations.all { Configuration conf ->
        conf.dependencies.all { Dependency dep ->
            if ("${dep.group}:${dep.name}" == 'com.google.guava:guava') {
                exclude group: 'com.google.code.findbugs'
                exclude group: 'org.checkerframework'
                exclude group: 'com.google.errorprone'
                exclude group: 'com.google.j2objc', module: 'j2objc-annotations'
            }
        }
    }

    dependencies {
        components.all(GradleApiAlignmentRule)
        components.all(SpotBugsAlignmentRule)
        components.all(JacocoAlignmentRule)
    }
}

class GradleApiAlignmentRule implements ComponentMetadataRule {
    void execute(ComponentMetadataContext context) {
        context.details.with {
            if (id.group == 'name.remal.gradle-api') {
                belongsTo("${id.group}:bom:${id.version}")
            }
        }
    }
}

class SpotBugsAlignmentRule implements ComponentMetadataRule {
    void execute(ComponentMetadataContext context) {
        context.details.with {
            if (id.group == 'com.github.spotbugs') {
                if (id.name == 'spotbugs'
                    || id.name == 'spotbugs-annotations'
                    || id.name == 'spotbugs-ant'
                ) {
                    belongsTo("${id.group}:bom:${id.version}")
                }
            }
        }
    }
}

class JacocoAlignmentRule implements ComponentMetadataRule {
    void execute(ComponentMetadataContext context) {
        context.details.with {
            if (id.group == 'org.jacoco') {
                belongsTo("${id.group}:bom:${id.version}")
            }
        }
    }
}
