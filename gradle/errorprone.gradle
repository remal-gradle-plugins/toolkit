allprojects {
    pluginManager.withPlugin('java') {
        apply plugin: 'net.ltgt.errorprone'
    }

    pluginManager.withPlugin('net.ltgt.errorprone') {
        String errorproneVersion = '2.41.0'

        dependencies {
            errorprone "com.google.errorprone:error_prone_core:$errorproneVersion"

            compileOnlyAll "com.google.errorprone:error_prone_annotations:$errorproneVersion"
        }

        configurations.errorprone.extendsFrom(configurations.mockito)
        dependencies {
            errorprone 'org.mockito:mockito-errorprone'
        }

        tasks.withType(JavaCompile).configureEach {
            options.errorprone {
                disableWarningsInGeneratedCode = true
                disable(
                    'AssignmentExpression', // too strict rule
                    'EffectivelyPrivate', // too strict rule
                    'StringConcatToTextBlock', // buggy with Lombok
                    'JavaxInjectOnAbstractMethod', // false positives with Gradle
                    'InjectOnConstructorOfAbstractClass', // false positives with Gradle
                    'MissingSummary', // we don't write JavaDocs everywhere
                    'DoNotCallSuggester', // we don't need this check
                    'UnusedVariable', // buggy and annoying
                    'SameNameButDifferent', // false positives with lombok.val
                    'ParameterName', // false positives with Lombok
                    'MissingOverride', // false positives with Lombok
                    'BugPatternNaming', // too strict rule
                    'StringCaseLocaleUsage', // too strict rule
                )
            }
        }
    }
}
