allprojects {
    pluginManager.withPlugin('java') {
        apply plugin: 'net.ltgt.errorprone'
    }

    pluginManager.withPlugin('net.ltgt.errorprone') {
        dependencies {
            errorprone 'com.google.errorprone:error_prone_core'

            compileOnlyAll 'com.google.errorprone:error_prone_annotations'
        }

        configurations.errorprone.extendsFrom(configurations.mockito)
        dependencies {
            errorprone 'org.mockito:mockito-errorprone'
        }

        tasks.withType(JavaCompile).configureEach {
            options.errorprone {
                disableWarningsInGeneratedCode = true
                disable(
                    'JavaxInjectOnAbstractMethod', // false positives with Gradle
                    'InjectOnConstructorOfAbstractClass', // false positives with Gradle
                    'MissingSummary', // we don't write JavaDocs everywhere
                    'DoNotCallSuggester', // we don't need this check
                    'UnusedVariable', // buggy and annoying
                    'SameNameButDifferent', // false positives with lombok.val
                    'ParameterName', // false positives with Lombok
                    'MissingOverride', // false positives with Lombok
                    'BugPatternNaming', // too strict rule
                    'StringCaseLocaleUsage', // too strict rule
                )

                String errorProneVersion = project.configurations.errorprone.allDependencyConstraints
                    .findAll { "${it.group}:${it.name}" == "com.google.errorprone:error_prone_core" }
                    .first()
                    .version
                if (errorProneVersion == '2.21.0') {
                    disable('NotJavadoc') // https://github.com/google/error-prone/issues/4040
                }
            }
        }
    }
}
