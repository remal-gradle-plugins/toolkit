name: build

on:
  push:
    branches:
    - main
    tags:
    - '*'
  pull_request: { }
  schedule:
  - cron: '43 6 * * *'
  workflow_dispatch: { }

defaults:
  run:
    shell: bash

env:
  GRADLE_OPTS: -Dorg.gradle.parallel=true -Dorg.gradle.workers.max=4 -Dorg.gradle.warning.mode=all -Dorg.gradle.daemon=false -Dhttp.keepAlive=false -Dsun.net.client.defaultConnectTimeout=15000 -Dsun.net.client.defaultReadTimeout=600000 -Dsun.net.http.retryPost=false -Dsun.io.useCanonCaches=false -Djava.awt.headless=true -Dorg.gradle.internal.launcher.welcomeMessageEnabled=false
  GIT_REF: ${{github.ref}}

jobs:
  populate-cache:
    if: >-
      ${{
        (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/'))
        || (github.event_name == 'push' && !startsWith(github.event.head_commit.message, '[push-back]'))
        || github.event_name != 'push'
      }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
    - name: Checkout repository
      uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # tag=v2
      with:
        submodules: recursive
        fetch-depth: 1
    - name: Validate Gradle Wrapper
      uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b # tag=v1
    - name: Cache
      id: cache
      uses: actions/cache@937d24475381cd9c75ae6db12cb4e79714b926ed # tag=v2
      with:
        key: ${{runner.os}}-gradle-${{hashFiles('gradle/wrapper/**', '**/*.gradle')}}
        path: |
          ~/.gradle
    - name: Setup Java 11
      if: ${{steps.cache.outputs.cache-hit != 'true'}}
      uses: actions/setup-java@f0bb91606209742fe3ea40199be2f3ef195ecabf # tag=v2
      with:
        java-version: 11
        distribution: zulu
    - name: Create cache content
      if: ${{steps.cache.outputs.cache-hit != 'true'}}
      run: |
        ./gradlew downloadDependencies

  build:
    needs:
    - populate-cache
    runs-on: ubuntu-latest
    timeout-minutes: 30
    outputs:
      repository-isTemplate: ${{fromJSON(steps.repository-info.outputs.result).isTemplate}}
      gradle-versions: ${{steps.gradle-versions.outputs.unstableMinors}}
    steps:
    - name: Checkout repository
      uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # tag=v2
      with:
        submodules: recursive
        fetch-depth: 1
    - name: Cache
      uses: actions/cache@937d24475381cd9c75ae6db12cb4e79714b926ed # tag=v2
      with:
        key: ${{runner.os}}-gradle-${{hashFiles('gradle/**', '**/*.gradle')}}
        path: |
          ~/.gradle
    - name: Setup Java 11
      uses: actions/setup-java@f0bb91606209742fe3ea40199be2f3ef195ecabf # tag=v2
      with:
        java-version: 11
        distribution: zulu
    - name: Retrieve repository info
      id: repository-info
      uses: remal-github-actions/retrieve-repository-info@c0e81eb54e4c89b2bbb7fb522869299ce8a097ac # tag=v1
    - name: Set repository info environment variables
      env:
        REPOSITORY_NAME: ${{fromJSON(steps.repository-info.outputs.result).name}}
        REPOSITORY_FULL_NAME: ${{fromJSON(steps.repository-info.outputs.result).fullName}}
        REPOSITORY_HTML_URL: ${{fromJSON(steps.repository-info.outputs.result).htmlUrl}}
        REPOSITORY_DESCRIPTION: ${{fromJSON(steps.repository-info.outputs.result).description}}
        REPOSITORY_TOPICS: ${{fromJSON(steps.repository-info.outputs.result).topicsString}}
        REPOSITORY_IS_TEMPLATE: ${{fromJSON(steps.repository-info.outputs.result).isTemplate}}
        REPOSITORY_OWNER_NAME: ${{fromJSON(steps.repository-info.outputs.result).owner.name}}
        REPOSITORY_LICENSE_NAME: ${{fromJSON(steps.repository-info.outputs.result).license.name}}
        REPOSITORY_LICENSE_HTML_URL: ${{fromJSON(steps.repository-info.outputs.result).license.htmlUrl}}
      run: |
        echo "REPOSITORY_NAME=$REPOSITORY_NAME" >> "$GITHUB_ENV"
        echo "REPOSITORY_FULL_NAME=$REPOSITORY_FULL_NAME" >> "$GITHUB_ENV"
        echo "REPOSITORY_HTML_URL=$REPOSITORY_HTML_URL" >> "$GITHUB_ENV"
        echo "REPOSITORY_DESCRIPTION=$REPOSITORY_DESCRIPTION" >> "$GITHUB_ENV"
        echo "REPOSITORY_TOPICS=$REPOSITORY_TOPICS" >> "$GITHUB_ENV"
        echo "REPOSITORY_IS_TEMPLATE=$REPOSITORY_IS_TEMPLATE" >> "$GITHUB_ENV"
        echo "REPOSITORY_OWNER_NAME=$REPOSITORY_OWNER_NAME" >> "$GITHUB_ENV"
        echo "REPOSITORY_LICENSE_NAME=$REPOSITORY_LICENSE_NAME" >> "$GITHUB_ENV"
        echo "REPOSITORY_LICENSE_HTML_URL=$REPOSITORY_LICENSE_HTML_URL" >> "$GITHUB_ENV"
    - name: Compile classes
      run: |
        ./gradlew allClasses
        echo "DISABLE_COMPILATION=true" >> "$GITHUB_ENV"
    - name: Build
      run: |
        ./gradlew build publishToMavenLocal -Pdisable-tests=true
    - name: Archive workspace
      run: |
        tar -cz -f "/tmp/workspace-${{github.run_id}}.tar.gz" `git ls-files -m -o`
    - name: Upload workspace archive
      uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2 # tag=v2
      with:
        name: workspace
        path: '/tmp/workspace-${{github.run_id}}.tar.gz'
        if-no-files-found: error
    - name: Read min supported Gradle version
      id: min-gradle-version
      uses: remal-github-actions/read-property@acacf7c2fd6dc6079fd6c8fc6d4f37298084908f # tag=v1
      with:
        file: gradle.properties
        property: 'gradle-api.min-version'
    - name: Retrieve Gradle versions for testing
      id: gradle-versions
      uses: remal-github-actions/retrieve-maven-artifact-versions@0970b1315ea2997aa532455d6b05952644462352 # tag=v1
      with:
        group: name.remal.gradle-api
        name: gradle-api
        repository: https://maven.pkg.github.com/remal-gradle-api/packages
        user: ${{github.actor}}
        password: ${{github.token}}
        min: ${{steps.min-gradle-version.outputs.value}}

  cross-versions-tests:
    needs:
    - build
    runs-on: ubuntu-latest
    timeout-minutes: 120
    env:
      DISABLE_COMPILATION: 'true'
      DISABLE_VERIFICATION_EXCEPT_TESTS: 'true'
    strategy:
      fail-fast: false
      matrix:
        gradle-version: ${{fromJSON(needs.build.outputs.gradle-versions)}}
    steps:
    - name: Checkout repository
      uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # tag=v2
      with:
        submodules: recursive
        fetch-depth: 1
    - name: Cache
      uses: actions/cache@937d24475381cd9c75ae6db12cb4e79714b926ed # tag=v2
      with:
        key: ${{runner.os}}-gradle-${{hashFiles('gradle/**', '**/*.gradle')}}
        path: |
          ~/.gradle
    - name: Setup Java 11
      uses: actions/setup-java@f0bb91606209742fe3ea40199be2f3ef195ecabf # tag=v2
      with:
        java-version: 11
        distribution: zulu
    - name: Download workspace archive
      id: download-workspace
      uses: actions/download-artifact@f023be2c48cc18debc3bacd34cb396e0295e2869 # tag=v2
      with:
        name: workspace
        path: /tmp
    - name: Unarchive workspace
      run: |
        tar -xz -f "${{steps.download-workspace.outputs.download-path}}/workspace-${{github.run_id}}.tar.gz"
    - name: Download dependencies
      run: |
        ./gradlew downloadDependencies "-Pgradle-api.version=${{matrix.gradle-version}}"
    - name: Execute tests
      run: |
        ./gradlew allTests "-Pgradle-api.version=${{matrix.gradle-version}}"

  cross-versions-tests-success:
    needs:
    - cross-versions-tests
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - name: Display success message
      run: |
        echo "All cross versions tests executed successfully"

  push-back:
    if: ${{github.event_name == 'push' && github.ref == 'refs/heads/main'}}
    needs:
    - cross-versions-tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      DISABLE_COMPILATION: 'true'
      DISABLE_VERIFICATION: 'true'
    steps:
    - name: Checkout repository
      uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # tag=v2
      with:
        submodules: recursive
        fetch-depth: 1
    - name: Cache
      uses: actions/cache@937d24475381cd9c75ae6db12cb4e79714b926ed # tag=v2
      with:
        key: ${{runner.os}}-gradle-${{hashFiles('gradle/**', '**/*.gradle')}}
        path: |
          ~/.gradle
    - name: Setup Java 11
      uses: actions/setup-java@f0bb91606209742fe3ea40199be2f3ef195ecabf # tag=v2
      with:
        java-version: 11
        distribution: zulu
    - name: Download workspace archive
      id: download-workspace
      uses: actions/download-artifact@f023be2c48cc18debc3bacd34cb396e0295e2869 # tag=v2
      with:
        name: workspace
        path: /tmp
    - name: Unarchive workspace
      run: |
        tar -xz -f "${{steps.download-workspace.outputs.download-path}}/workspace-${{github.run_id}}.tar.gz"
    - name: Update README
      run: |
        ./gradlew processReadme
    - name: Update Renovate config
      run: |
        ./gradlew configureRenovate
    - name: Update IDEA settings
      run: |
        ./gradlew configureIdea
    - name: Push back
      env:
        PUSH_BACK_TOKEN: ${{secrets.PUSH_BACK_TOKEN}}
      if: ${{env.PUSH_BACK_TOKEN && github.event_name == 'push' && startsWith(github.ref, 'refs/heads/')}}
      uses: remal-github-actions/push-back@3ad8fb7d2a0d4ab53ea5b1c22138d5d9869f803b # tag=v1
      with:
        githubToken: ${{env.PUSH_BACK_TOKEN}}
        message: '[push-back] Push-back updated files during build'

  parse-git-tag:
    if: ${{github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')}}
    needs:
    - cross-versions-tests
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      isVersion: ${{fromJSON(steps.parse-git-tag.outputs.result).isVersion}}
    steps:
    - name: Parse Git tag
      id: parse-git-tag
      uses: actions/github-script@e3cbab99d3a9b271e1b79fc96d103a4a5534998c # tag=v5
      with:
        script: |
          const tagName = context.payload.ref.replace(/^refs\/tags\//, '')
          core.info('Git tag: ' + tagName)
          const result = {
            isVersion: !!tagName.match(/^v(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-rc-[1-9]\d*)?$/),
          }
          core.info(JSON.stringify(result, null, '  '))
          return result

  evaluate-publish-conditions:
    if: >-
      ${{
        github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        && fromJSON(needs.build.outputs.repository-isTemplate) != true
        && fromJSON(needs.parse-git-tag.outputs.isVersion) == true
      }}
    needs:
    - build
    - cross-versions-tests
    - parse-git-tag
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - name: Display success message
      run: |
        echo "All publish conditions evaluated successfully"

  publish-to-maven-central:
    needs:
    - evaluate-publish-conditions
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      DISABLE_COMPILATION: 'true'
      DISABLE_VERIFICATION: 'true'
    steps:
    - name: Checkout repository
      uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # tag=v2
      with:
        submodules: recursive
        fetch-depth: 1
    - name: Cache
      uses: actions/cache@937d24475381cd9c75ae6db12cb4e79714b926ed # tag=v2
      with:
        key: ${{runner.os}}-gradle-${{hashFiles('gradle/**', '**/*.gradle')}}
        path: |
          ~/.gradle
    - name: Setup Java 11
      uses: actions/setup-java@f0bb91606209742fe3ea40199be2f3ef195ecabf # tag=v2
      with:
        java-version: 11
        distribution: zulu
    - name: Download workspace archive
      id: download-workspace
      uses: actions/download-artifact@f023be2c48cc18debc3bacd34cb396e0295e2869 # tag=v2
      with:
        name: workspace
        path: /tmp
    - name: Unarchive workspace
      run: |
        tar -xz -f "${{steps.download-workspace.outputs.download-path}}/workspace-${{github.run_id}}.tar.gz"
    - name: Publish to Maven Central
      run: |
        ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository "-PsonatypeUsername=${{secrets.OSS_USER}}" "-PsonatypePassword=${{secrets.OSS_PASSWORD}}" "-Psigning.key=${{secrets.SIGNING_SECRET_KEY_RING}}" "-Psigning.keyId=${{secrets.SIGNING_KEY_ID}}" "-Psigning.password=${{secrets.SIGNING_PASSWORD}}"
