import java.util.concurrent.atomic.AtomicBoolean

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

gradle.beforeProject { Project project ->
    project.buildscript { buildscript ->
        buildscript.repositories {
            gradlePluginPortal()
            mavenCentral()
        }

        AtomicBoolean isSnapshotMavenLocalRepositoryAdded = new AtomicBoolean(false)
        def addSnapshotMavenLocalRepository = {
            if (isSnapshotMavenLocalRepositoryAdded.compareAndSet(false, true)) {
                buildscript.repositories.mavenLocal {
                    name = "${ArtifactRepositoryContainer.DEFAULT_MAVEN_LOCAL_REPO_NAME} for SNAPSHOT buildscript dependencies"
                    content {
                        includeVersionByRegex(/.+/, /.+/, /.+-SNAPSHOT$/)
                    }
                }
            }
        }
        buildscript.configurations.all { Configuration conf ->
            conf.dependencies.all { Dependency dep ->
                String dependencyVersion = dep.version ?: ''
                if (dep instanceof ExternalModuleDependency && dependencyVersion.endsWith('-SNAPSHOT')) {
                    addSnapshotMavenLocalRepository()
                }
            }
            conf.dependencyConstraints.all { DependencyConstraint constraint ->
                String constraintVersion = constraint.version ?: ''
                if (constraintVersion.endsWith('-SNAPSHOT')) {
                    addSnapshotMavenLocalRepository()
                }
            }
        }
    }
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

rootProject.name = 'toolkit'

include(
    ':toolkit--java-common',
    ':toolkit--java-9',
    ':testkit',
)
